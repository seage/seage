/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

dependencies {
    implementation group: 'com.beust', name: 'jcommander', version: '1.78'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'
     implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.1'

    implementation project(':seage-aal')
    implementation project(':seage-hyperheuristics')
    implementation project(':seage-metaheuristics')
    implementation project(':seage-misc')
    implementation project(':seage-problem-tsp')
    implementation project(':seage-problem-sat')
    implementation project(':seage-problem-jsp')
    implementation project(':seage-problem-fsp')
    implementation project(':seage-problem-qap')
}

application {
    // Define the main class for the application.
    mainClass = 'org.seage.launcher.Launcher'

    // installDist {
    //     destinationDir = file("$rootDir/build/install")
    // }
}

task generateSources {
  def outputDir = file("$projectDir/src/main/java")
  outputs.dir outputDir
  doFirst {
    def srcFile = new File(outputDir, "org/seage/launcher/SeageVersion.java")
    srcFile.parentFile.mkdirs()
    srcFile.write("""
// This file is generated
package org.seage.launcher;

class SeageVersion {
  static final String VERSION = "$project.version";
  private SeageVersion() {}
}
"""
    )
  }
}
compileJava.dependsOn generateSources
// compileJava.source generateSources.outputs.files, sourceSets.main.java
// sourceSets.main.java.srcDirs = ["$buildDir/generated/sources/main/java",'src/main/java']
