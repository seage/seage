/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */
plugins {
  id 'org.sonarqube' version '3.1.1'
  id 'checkstyle'
  id 'com.github.spotbugs' version '4.7.0'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    
    repositories {
        jcenter()
    }
}


subprojects {
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.spotbugs'

    dependencies {
        // Use JUnit Jupiter API for testing.
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

        // Use JUnit Jupiter Engine for testing.
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha5'

    }
    test {
        // Use junit platform for unit tests.
        useJUnitPlatform()
        reports.html.enabled = false
    }
    checkstyle {
        // toolVersion = '8.4.0'
        configFile = file("$rootDir/.settings/checkstyle.xml")
        configProperties = [
            'checkstyle.cache.file': "${buildDir}/checkstyle.cache",
        ]
        ignoreFailures = true
        showViolations = true
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

task codeCoverageReport(type: JacocoReport) {

    // Gather execution data from all subprojects
    // (change this if you e.g. want to calculate unit test/integration test coverage separately)
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant sourcesets from the subprojects 
    subprojects.each {
       sourceSets it.sourceSets.main
    }

    reports {
      xml.enabled true
      html.enabled true
      csv.enabled false
    }
}

// always run the tests before generating the report
codeCoverageReport.dependsOn {
    subprojects*.test
}

// checkstyle {
//   toolVersion "8.4.0"
// }

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"

    }
}

spotbugs {
  toolVersion = '4.2.2'
    ignoreFailures = true
    showStackTraces = false
    showProgress = true
    effort = 'default'
    reportLevel = 'default'
    visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
    omitVisitors = [ 'FindNonShortCircuit' ]
    reportsDir = file("$buildDir/spotbugs")
    // includeFilter = file("include.xml")
    // excludeFilter = file("exclude.xml")
    // baselineFile = file("baseline.xml")
    // onlyAnalyze = [ 'com.foobar.MyClass', 'com.foobar.mypkg.*' ]
    maxHeapSize = '1g'
    // extraArgs = [ '-nested:false' ]
    // jvmArgs = [ '-Duser.language=ja' ]
}
